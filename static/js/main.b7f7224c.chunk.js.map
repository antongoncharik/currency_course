{"version":3,"sources":["components/CurrentlyCurrencyCourse/CurrentlyCurrencyCourse.module.css","components/MainApp/MainApp.module.css","API/officialCurrenciesCoursesAPI.js","helpers/calculationAmountCurrency.js","redux/currencyCourseReducer.js","components/CommonComponents/CommonComponents.jsx","components/CurrentlyCurrencyCourse/CurrentlyCurrencyCourse.jsx","components/ConvertCurrency/ConvertCurrency.jsx","components/Period/Period.jsx","components/ChartCurrency/ChartCurrency.jsx","components/MainApp/MainApp.jsx","redux/store.js","App.js","serviceWorker.js","index.js","components/ConvertCurrency/ConvertCurrency.module.css","components/CommonComponents/CommonComponents.module.css","components/Period/Period.module.css","components/ChartCurrency/ChartCurrency.module.css"],"names":["module","exports","instance","axios","baseURL","getCurrencyCourseAPI","id","get","getCurrencyCourseToPeriodAPI","startDate","endDate","calculationAmountCurrency","amount","courseStart","courseEnd","scaleStart","scaleEnd","toFixed","initialState","currencies","currencyId","currencyAbbreviation","currencyName","currenciesCourses","scale","course","date","currencyCourseToPeriod","selectedCurrencyId","selectedCurrencyUpId","selectedCurrencyDownId","amountCurrencyUp","amountCurrencyDown","getCurrencyCourseAC","dataCurrency","type","getCurrencyCourseToPeriodAC","dataCurrencyToPeriod","getSelectedCurrencyAC","getSelectedCurrencyUpAC","getSelectedCurrencyDownAC","getAmountCurrencyAC","amountUp","amountDown","setCurrencyCourse","numberCurrency","currencyUpId","currencyDownId","dispatch","getState","a","result","status","data","setCalculationCurrency","getCurrencyCourseToPeriod","changedCurrency","scaleUp","find","item","courseUp","scaleDown","courseDown","newAmount","CommonSelectCurrency","props","defaultValue","className","cs","select","onChange","e","changeCurrency","onBlur","map","key","value","CommonInputCurrency","min","amountCurrency","changeAmountCurrency","connect","state","setCurrencies","filter","Date","Cur_DateEnd","dataCurrencies","useState","openedList","openCloseList","useEffect","length","cn","s","blockCourse","blockText","currentTarget","blockCurrentlyCourse","onClick","setAmountCurrency","openedListUp","openCloseListUp","openedListDown","openCloseListDown","currencyUpAbbreviation","currencyDownAbbreviation","blockConvertCurrency","textConvert","currencyUp","changeCurrencyUp","blockCurrentlyCourseText","countUp","currencyDown","changeCurrencyDown","countDown","Period","handleDayClick","bind","handleResetClick","getInitialState","from","undefined","to","day","range","DateUtils","addDayToRange","this","setState","startDateStr","getFullYear","getMonth","getDate","endDateStr","setPeriod","modifiers","start","end","period","toLocaleDateString","numberOfMonths","selectedDays","onDayClick","React","Component","defaultProps","getPeriodAC","options","title","display","text","fontFamily","fontColor","fontSize","legend","labels","animation","duration","scales","xAxes","gridLines","color","ticks","yAxes","datasets","label","borderColor","backgroundColor","width","height","MainApp","app","currentlyCurrency","convertCurrency","chartCurrency","ChartCurrency","reducers","combineReducers","action","Cur_ID","Cur_Abbreviation","Cur_Name_Eng","Cur_Scale","Cur_OfficialRate","slice","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b7f7224c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"blockCourse\":\"CurrentlyCurrencyCourse_blockCourse___5dwR\",\"blockCurrentlyCourse\":\"CurrentlyCurrencyCourse_blockCurrentlyCourse__3Xi7K\",\"blockText\":\"CurrentlyCurrencyCourse_blockText__3xIlG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"MainApp_app__2YCjs\",\"currentlyCurrency\":\"MainApp_currentlyCurrency__37GDb\",\"convertCurrency\":\"MainApp_convertCurrency__HGtqD\",\"chartCurrency\":\"MainApp_chartCurrency__2dKCO\"};","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://www.nbrb.by/api/exrates/'\r\n});\r\n\r\nexport const getCurrenciesAPI = () => {\r\n    return instance.get(`currencies`)\r\n};\r\nexport const getCurrencyCourseAPI = (id) => {\r\n    return instance.get(`rates/${id}`)\r\n};\r\nexport const getCurrencyCourseToPeriodAPI = (id, startDate, endDate) => {\r\n    return instance.get(`rates/Dynamics/${id}?startDate=${startDate}&endDate=${endDate}`)\r\n};","export const calculationAmountCurrency = (amount, courseStart, courseEnd, scaleStart, scaleEnd) => {\r\n    return ((amount * courseStart * scaleEnd).toFixed(2) / (courseEnd * scaleStart).toFixed(2)).toFixed(2)\r\n};\r\n","import {\r\n    getCurrenciesAPI,\r\n    getCurrencyCourseAPI,\r\n    getCurrencyCourseToPeriodAPI\r\n} from \"../API/officialCurrenciesCoursesAPI\";\r\nimport {calculationAmountCurrency} from \"../helpers/calculationAmountCurrency\";\r\n\r\nconst GET_CURRENCIES = 'GET_CURRENCIES';\r\nconst GET_CURRENCY_COURSE = 'GET_CURRENCY_COURSE';\r\nconst GET_CURRENCY_COURSE_TO_PERIOD = 'GET_CURRENCY_COURSE_TO_PERIOD';\r\nconst SET_SELECTED_CURRENCY = 'SET_SELECTED_CURRENCY';\r\nconst SET_SELECTED_CURRENCY_UP = 'SET_SELECTED_CURRENCY_UP';\r\nconst SET_SELECTED_CURRENCY_DOWN = 'SET_SELECTED_CURRENCY_DOWN';\r\nconst SET_AMOUNT_CURRENCY = 'SET_AMOUNT_CURRENCY';\r\nconst SET_PERIOD = 'SET_PERIOD';\r\n\r\nconst initialState = {\r\n    currencies: [{currencyId: 145, currencyAbbreviation: '', currencyName: ''}],\r\n    currenciesCourses: [{currencyId: 145, scale: 0, course: 0, date: ''}],\r\n    currencyCourseToPeriod: [{currencyId: 145, course: 0, date: ''}, {currencyId: 145, course: 1, date: ''}],\r\n    selectedCurrencyId: 145,\r\n    selectedCurrencyUpId: 145,\r\n    selectedCurrencyDownId: 145,\r\n    amountCurrencyUp: 1,\r\n    amountCurrencyDown: 1,\r\n    startDate: '',\r\n    endDate: ''\r\n};\r\n\r\nexport const currencyCourseReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_CURRENCIES:\r\n            return {\r\n                ...state, currencies: action.dataCurrencies.map(item =>\r\n                    ({\r\n                        currencyId: item.Cur_ID,\r\n                        currencyAbbreviation: item.Cur_Abbreviation,\r\n                        currencyName: item.Cur_Name_Eng\r\n                    }))\r\n            };\r\n            break;\r\n        case GET_CURRENCY_COURSE:\r\n            return {\r\n                ...state, currenciesCourses: [...state.currenciesCourses,\r\n                    {\r\n                        currencyId: action.dataCurrency.Cur_ID,\r\n                        scale: action.dataCurrency.Cur_Scale,\r\n                        course: action.dataCurrency.Cur_OfficialRate,\r\n                        date: action.dataCurrency.Date\r\n                    }\r\n                ].filter(item => {\r\n                    return item.course > 0\r\n                })\r\n            };\r\n            break;\r\n        case\r\n        SET_SELECTED_CURRENCY:\r\n            return {\r\n                ...state, selectedCurrencyId: action.id\r\n            };\r\n            break;\r\n        case\r\n        SET_SELECTED_CURRENCY_UP:\r\n            return {\r\n                ...state, selectedCurrencyUpId: action.id\r\n            };\r\n            break;\r\n        case\r\n        SET_SELECTED_CURRENCY_DOWN:\r\n            return {\r\n                ...state, selectedCurrencyDownId: action.id\r\n            };\r\n            break;\r\n        case\r\n        SET_AMOUNT_CURRENCY:\r\n            return {\r\n                ...state, amountCurrencyUp: action.amountUp,\r\n                amountCurrencyDown: action.amountDown\r\n            };\r\n            break;\r\n        case\r\n        GET_CURRENCY_COURSE_TO_PERIOD:\r\n            return {\r\n                ...state, currencyCourseToPeriod: action.dataCurrencyToPeriod.map(item =>\r\n                    ({\r\n                        currencyId: item.Cur_ID,\r\n                        course: item.Cur_OfficialRate,\r\n                        date: item.Date.slice(0, 10)\r\n                    }))\r\n            };\r\n            break;\r\n        case\r\n        SET_PERIOD:\r\n            return {\r\n                ...state, startDate: action.startDate, endDate: action.endDate\r\n            };\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst getCurrenciesAC = (dataCurrencies) => {\r\n    return {type: 'GET_CURRENCIES', dataCurrencies}\r\n};\r\nconst getCurrencyCourseAC = (dataCurrency) => {\r\n    return {type: 'GET_CURRENCY_COURSE', dataCurrency}\r\n};\r\nconst getCurrencyCourseToPeriodAC = (id, dataCurrencyToPeriod) => {\r\n    return {type: 'GET_CURRENCY_COURSE_TO_PERIOD', id, dataCurrencyToPeriod}\r\n};\r\nconst getSelectedCurrencyAC = (id) => {\r\n    return {type: 'SET_SELECTED_CURRENCY', id}\r\n};\r\nconst getSelectedCurrencyUpAC = (id) => {\r\n    return {type: 'SET_SELECTED_CURRENCY_UP', id}\r\n};\r\nconst getSelectedCurrencyDownAC = (id) => {\r\n    return {type: 'SET_SELECTED_CURRENCY_DOWN', id}\r\n};\r\nconst getAmountCurrencyAC = (amountUp, amountDown) => {\r\n    return {type: 'SET_AMOUNT_CURRENCY', amountUp, amountDown}\r\n};\r\nconst getPeriodAC = (startDate, endDate) => {\r\n    return {type: 'SET_PERIOD', startDate, endDate}\r\n};\r\n\r\nexport const setCurrencies = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const result = await getCurrenciesAPI();\r\n            if (result.status === 200) {\r\n                const currencies = result.data.filter(item => new Date(item.Cur_DateEnd) > new Date());\r\n                dispatch(getCurrenciesAC(currencies));\r\n            }\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n};\r\nexport const setCurrencyCourse = (id, numberCurrency = '', amount, currencyUpId, currencyDownId) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            const result = await getCurrencyCourseAPI(id);\r\n            if (result.status === 200) {\r\n                dispatch(getCurrencyCourseAC(result.data));\r\n                if (numberCurrency === '') {\r\n                    dispatch(getSelectedCurrencyAC(id));\r\n                } else if (numberCurrency === 'up') {\r\n                    dispatch(getSelectedCurrencyUpAC(id));\r\n                    setCalculationCurrency(dispatch, getState().currenciesCourses.currenciesCourses, numberCurrency,\r\n                        amount, id, currencyDownId);\r\n                } else if (numberCurrency === 'down') {\r\n                    dispatch(getSelectedCurrencyDownAC(id));\r\n                    setCalculationCurrency(dispatch, getState().currenciesCourses.currenciesCourses, numberCurrency,\r\n                        amount, currencyUpId, id);\r\n                }\r\n            }\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n};\r\nexport const setPeriod = (startDate, endDate) => {\r\n    return (dispatch) => {\r\n        dispatch(getPeriodAC(startDate, endDate));\r\n    }\r\n};\r\nexport const getCurrencyCourseToPeriod = (id, startDate, endDate) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const result = await getCurrencyCourseToPeriodAPI(id, startDate, endDate);\r\n            if (result.status === 200) {\r\n                dispatch(getCurrencyCourseToPeriodAC(id, result.data));\r\n            }\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n};\r\nexport const setAmountCurrency = (changedCurrency, amount, currencyUpId, currencyDownId) => {\r\n    return (dispatch, getState) => {\r\n        setCalculationCurrency(dispatch, getState().currenciesCourses.currenciesCourses, changedCurrency,\r\n            amount, currencyUpId, currencyDownId);\r\n    }\r\n};\r\nconst setCalculationCurrency = (dispatch, currenciesCourses, changedCurrency, amount, currencyUpId, currencyDownId) => {\r\n    const scaleUp = +currenciesCourses.find(item => item.currencyId === +currencyUpId).scale;\r\n    const courseUp = +currenciesCourses.find(item => item.currencyId === +currencyUpId).course;\r\n    const scaleDown = +currenciesCourses.find(item => item.currencyId === +currencyDownId).scale;\r\n    const courseDown = +currenciesCourses.find(item => item.currencyId === +currencyDownId).course;\r\n    if (changedCurrency === 'up') {\r\n        let newAmount = calculationAmountCurrency(+amount, courseUp, courseDown, scaleUp, scaleDown);\r\n        if (currencyUpId === currencyDownId) {\r\n            newAmount = amount;\r\n        }\r\n        dispatch(getAmountCurrencyAC(+amount, +newAmount));\r\n    } else {\r\n        let newAmount = calculationAmountCurrency(+amount, courseDown, courseUp, scaleDown, scaleUp);\r\n        if (currencyUpId === currencyDownId) {\r\n            newAmount = amount;\r\n        }\r\n        dispatch(getAmountCurrencyAC(+newAmount, +amount));\r\n    }\r\n};","import React from 'react';\r\nimport cs from \"./CommonComponents.module.css\";\r\n\r\nexport const CommonSelectCurrency = (props) => {\r\n    return (\r\n        <select defaultValue={props.selectedCurrencyId}\r\n                className={cs.select}\r\n                onChange={(e) => props.changeCurrency(e)}\r\n                onBlur={(e) => props.changeCurrency(e)}>\r\n            {props.currencies.map(item =>\r\n                <option key={item.currencyId}\r\n                        value={item.currencyId}>{item.currencyAbbreviation}</option>)}\r\n        </select>\r\n    )\r\n};\r\n\r\nexport const CommonInputCurrency = (props) => {\r\n    return (\r\n        <input type='number'\r\n               min='0'\r\n               value={props.amountCurrency}\r\n               onChange={(e) => props.changeAmountCurrency(e, 'up', props.selectedCurrencyUpId, props.selectedCurrencyDownId)}/>\r\n    )\r\n};\r\n","import React, {useState, useEffect} from 'react';\r\nimport s from './CurrentlyCurrencyCourse.module.css';\r\nimport cn from 'classnames';\r\nimport {connect} from \"react-redux\";\r\nimport {setCurrencies, setCurrencyCourse, getCurrencyCourseToPeriod} from \"../../redux/currencyCourseReducer\";\r\nimport {CommonSelectCurrency} from \"../CommonComponents/CommonComponents\";\r\n\r\nconst CurrentlyCurrencyCourse = (props) => {\r\n    const [openedList, openCloseList] = useState(false);\r\n\r\n    useEffect(() => {\r\n        props.setCurrencies();\r\n        props.setCurrencyCourse(145);\r\n    }, [props.currencies.length]);\r\n\r\n    useEffect(() => {\r\n        props.getCurrencyCourseToPeriod(props.selectedCurrencyId, props.startDate, props.endDate);\r\n    }, [props.selectedCurrencyId]);\r\n\r\n    const course = props.currenciesCourses.find(item => item.currencyId === +props.selectedCurrencyId).course;\r\n\r\n    const scale = props.currenciesCourses.find(item => item.currencyId === +props.selectedCurrencyId).scale;\r\n\r\n    const currencyAbbreviation = props.currencies.find(item => item.currencyId === +props.selectedCurrencyId).currencyAbbreviation;\r\n\r\n    const changeCurrency = (e) => {\r\n        openCloseList(false);\r\n        props.setCurrencyCourse(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className={cn(s.blockCourse, s.blockText)}>\r\n                <div>CURRENCY</div>\r\n                <div>COURSE</div>\r\n                {openedList &&\r\n                <CommonSelectCurrency currencies={props.currencies}\r\n                                      selectedCurrencyId={props.selectedCurrencyId}\r\n                                      changeCurrency={(e) => changeCurrency(e)}/> ||\r\n                <div className={s.blockCurrentlyCourse}\r\n                     onClick={() => openCloseList(true)}>{`${currencyAbbreviation} (${scale})`}</div>}\r\n                <div className={s.blockCurrentlyCourse}>{course}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currencies: state.currenciesCourses.currencies,\r\n        currenciesCourses: state.currenciesCourses.currenciesCourses,\r\n        selectedCurrencyId: state.currenciesCourses.selectedCurrencyId,\r\n        startDate: state.currenciesCourses.startDate,\r\n        endDate: state.currenciesCourses.endDate\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    setCurrencies,\r\n    setCurrencyCourse,\r\n    getCurrencyCourseToPeriod\r\n})(CurrentlyCurrencyCourse);","import React, {useState} from 'react';\r\nimport s from './ConvertCurrency.module.css';\r\nimport cn from 'classnames';\r\nimport {CommonSelectCurrency, CommonInputCurrency} from \"../CommonComponents/CommonComponents\";\r\nimport {connect} from \"react-redux\";\r\nimport {setCurrencyCourse, setAmountCurrency} from \"../../redux/currencyCourseReducer\";\r\n\r\nconst ConvertCurrency = (props) => {\r\n    const [openedListUp, openCloseListUp] = useState(false);\r\n\r\n    const [openedListDown, openCloseListDown] = useState(false);\r\n\r\n    const currencyUpAbbreviation = props.currencies.find(item => item.currencyId === +props.selectedCurrencyUpId).currencyAbbreviation;\r\n\r\n    const currencyDownAbbreviation = props.currencies.find(item => item.currencyId === +props.selectedCurrencyDownId).currencyAbbreviation;\r\n\r\n    const scaleUp = props.currenciesCourses.find(item => item.currencyId === +props.selectedCurrencyUpId).scale;\r\n\r\n    const scaleDown = props.currenciesCourses.find(item => item.currencyId === +props.selectedCurrencyDownId).scale;\r\n\r\n    const changeCurrencyUp = (e) => {\r\n        openCloseListUp(false);\r\n        props.setCurrencyCourse(e.currentTarget.value, 'up', props.amountCurrencyUp, props.selectedCurrencyUpId, props.selectedCurrencyDownId);\r\n    };\r\n\r\n    const changeCurrencyDown = (e) => {\r\n        openCloseListDown(false);\r\n        props.setCurrencyCourse(e.currentTarget.value, 'down', props.amountCurrencyDown, props.selectedCurrencyUpId, props.selectedCurrencyDownId);\r\n    };\r\n\r\n    const changeAmountCurrency = (e, changedCurrency, currencyUpId, currencyDownId) => {\r\n        props.setAmountCurrency(changedCurrency, +e.currentTarget.value, currencyUpId, currencyDownId);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className={cn(s.blockText, s.blockConvertCurrency)}>\r\n                <div className={cn(s.textConvert)}>CONVERT CURRENCY</div>\r\n                <div className={cn(s.currencyUp)}>\r\n                    {openedListUp &&\r\n                    <CommonSelectCurrency currencies={props.currencies}\r\n                                          selectedCurrencyId={props.selectedCurrencyUpId}\r\n                                          changeCurrency={(e) => changeCurrencyUp(e)}/> ||\r\n                    <div className={s.blockCurrentlyCourseText}\r\n                         onClick={() =>\r\n                             openCloseListUp(true)}>{`${currencyUpAbbreviation} (${scaleUp})`}</div>}\r\n                </div>\r\n                <div className={cn(s.countUp)}>\r\n                    <CommonInputCurrency amountCurrency={props.amountCurrencyUp}\r\n                                         selectedCurrencyUpId={props.selectedCurrencyUpId}\r\n                                         selectedCurrencyDownId={props.selectedCurrencyDownId}\r\n                                         changeAmountCurrency={(e) =>\r\n                                             changeAmountCurrency(e, 'up', props.selectedCurrencyUpId, props.selectedCurrencyDownId)}/>\r\n                </div>\r\n                <div className={cn(s.currencyDown)}>\r\n                    {openedListDown &&\r\n                    <CommonSelectCurrency currencies={props.currencies}\r\n                                          selectedCurrencyId={props.selectedCurrencyDownId}\r\n                                          changeCurrency={(e) => changeCurrencyDown(e)}/> ||\r\n                    <div className={s.blockCurrentlyCourseText}\r\n                         onClick={() =>\r\n                             openCloseListDown(true)}>{`${currencyDownAbbreviation} (${scaleDown})`}</div>}\r\n                </div>\r\n                <div className={cn(s.countDown)}>\r\n                    <CommonInputCurrency amountCurrency={props.amountCurrencyDown}\r\n                                         selectedCurrencyUpId={props.selectedCurrencyUpId}\r\n                                         selectedCurrencyDownId={props.selectedCurrencyDownId}\r\n                                         changeAmountCurrency={(e) =>\r\n                                             changeAmountCurrency(e, 'down', props.selectedCurrencyUpId, props.selectedCurrencyDownId)}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currencies: state.currenciesCourses.currencies,\r\n        currenciesCourses: state.currenciesCourses.currenciesCourses,\r\n        selectedCurrencyUpId: state.currenciesCourses.selectedCurrencyUpId,\r\n        selectedCurrencyDownId: state.currenciesCourses.selectedCurrencyDownId,\r\n        amountCurrencyUp: state.currenciesCourses.amountCurrencyUp,\r\n        amountCurrencyDown: state.currenciesCourses.amountCurrencyDown\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    setCurrencyCourse,\r\n    setAmountCurrency\r\n})(ConvertCurrency);","import React from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport DayPicker, {DateUtils} from 'react-day-picker';\r\nimport 'react-day-picker/lib/style.css';\r\nimport {connect} from \"react-redux\";\r\nimport {getCurrencyCourseToPeriod, setPeriod} from \"../../redux/currencyCourseReducer\";\r\nimport s from './Period.module.css';\r\n\r\nclass Period extends React.Component {\r\n    static defaultProps = {\r\n        numberOfMonths: 3,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleDayClick = this.handleDayClick.bind(this);\r\n        this.handleResetClick = this.handleResetClick.bind(this);\r\n        this.state = this.getInitialState();\r\n    }\r\n\r\n    getInitialState() {\r\n        return {\r\n            from: undefined,\r\n            to: undefined,\r\n        };\r\n    }\r\n\r\n    handleDayClick(day) {\r\n        const range = DateUtils.addDayToRange(day, this.state);\r\n        this.setState(range);\r\n        if (range.from && range.to) {\r\n            const startDate = new Date(range.from);\r\n            const endDate = new Date(range.to);\r\n            const startDateStr = `${startDate.getFullYear()}-${startDate.getMonth() + 1}-${startDate.getDate()}`;\r\n            const endDateStr = `${endDate.getFullYear()}-${endDate.getMonth() + 1}-${endDate.getDate()}`;\r\n            this.props.setPeriod(startDateStr, endDateStr);\r\n            this.props.getCurrencyCourseToPeriod(this.props.selectedCurrencyId, startDateStr, endDateStr);\r\n        }\r\n    }\r\n\r\n    handleResetClick() {\r\n        this.setState(this.getInitialState());\r\n    }\r\n\r\n    render() {\r\n        const {from, to} = this.state;\r\n        const modifiers = {start: from, end: to};\r\n        return (\r\n            <div className={s.period}>\r\n                <p>\r\n                    {!from && !to && 'Please select the first day.'}\r\n                    {from && !to && 'Please select the last day.'}\r\n                    {from &&\r\n                    to &&\r\n                    `Selected from ${from.toLocaleDateString()} to\r\n                ${to.toLocaleDateString()}`}{' '}\r\n                    {from && to && (\r\n                        <button className=\"link\" onClick={this.handleResetClick}>\r\n                            Reset\r\n                        </button>\r\n                    )}\r\n                </p>\r\n                <DayPicker\r\n                    className=\"Selectable\"\r\n                    numberOfMonths={this.props.numberOfMonths}\r\n                    selectedDays={[from, {from, to}]}\r\n                    modifiers={modifiers}\r\n                    onDayClick={this.handleDayClick}\r\n                />\r\n                <Helmet>\r\n                    <style>{`\r\n  .Selectable .DayPicker-Day--selected:not(.DayPicker-Day--start):not(.DayPicker-Day--end):not(.DayPicker-Day--outside) {\r\n    background-color: #f0f8ff !important;\r\n    color: #4a90e2;\r\n  }\r\n  .Selectable .DayPicker-Day {\r\n    border-radius: 0 !important;\r\n  }\r\n  .Selectable .DayPicker-Day--start {\r\n    border-top-left-radius: 50% !important;\r\n    border-bottom-left-radius: 50% !important;\r\n  }\r\n  .Selectable .DayPicker-Day--end {\r\n    border-top-right-radius: 50% !important;\r\n    border-bottom-right-radius: 50% !important;\r\n  }\r\n  .Selectable {\r\n    color: #ffffff;\r\n  }\r\n`}</style>\r\n                </Helmet>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedCurrencyId: state.currenciesCourses.selectedCurrencyId\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    getCurrencyCourseToPeriod, setPeriod\r\n})(Period);","import React from 'react';\r\nimport {Line as LineChart} from 'react-chartjs-2';\r\nimport Period from \"../Period/Period\";\r\nimport s from './ChartCurrency.module.css';\r\nimport {connect} from \"react-redux\";\r\n\r\nconst options = {\r\n    title: {\r\n        display: true,\r\n        text: 'Currency course',\r\n        fontFamily: 'a_LCDNova',\r\n        fontColor: 'rgb(255, 255, 255, 1)',\r\n        fontSize: 26\r\n    },\r\n    legend: {\r\n        labels: {\r\n            fontFamily: 'a_LCDNova',\r\n            fontColor: 'rgb(255, 255, 255, 1)',\r\n            fontSize: 15\r\n        }\r\n    },\r\n    animation: {\r\n        duration: 3000\r\n    },\r\n    scales: {\r\n        xAxes: [{\r\n            gridLines: {\r\n                color: 'rgb(255, 255, 255, 0.3)'\r\n            },\r\n            ticks: {\r\n                fontColor: 'rgb(255, 255, 255, 1)'\r\n            }\r\n        }],\r\n        yAxes: [{\r\n            gridLines: {\r\n                color: 'rgb(255, 255, 255, 0.3)'\r\n            },\r\n            ticks: {\r\n                fontColor: 'rgb(255, 255, 255, 1)'\r\n            }\r\n        }]\r\n    }\r\n};\r\n\r\nconst chartData = (currencyCourseToPeriod) => {\r\n    const dates = currencyCourseToPeriod.map(item => item.date);\r\n    const courses = currencyCourseToPeriod.map(item => item.course);\r\n\r\n    return {\r\n        labels: dates,\r\n        datasets: [\r\n            {\r\n                label: 'Currency course',\r\n                borderColor: 'rgb(255, 255, 255, 1)',\r\n                backgroundColor: 'rgb(255, 255, 255, 0.1)',\r\n                data: courses\r\n            }\r\n        ]\r\n    }\r\n};\r\n\r\nconst ChartCurrencyCourse = (props) => {\r\n    return (\r\n        <div>\r\n            <LineChart data={chartData(props.currencyCourseToPeriod)}\r\n                       options={options}\r\n                       width=\"300\"\r\n                       height=\"100\"/>\r\n            <div className={s.period}>\r\n                <Period/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currencyCourseToPeriod: state.currenciesCourses.currencyCourseToPeriod\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps,\r\n    null\r\n)(ChartCurrencyCourse);","import React from 'react';\r\nimport CurrentlyCurrencyCourse from \"../CurrentlyCurrencyCourse/CurrentlyCurrencyCourse\";\r\nimport ConvertCurrency from \"../ConvertCurrency/ConvertCurrency\";\r\nimport ChartCurrency from \"../ChartCurrency/ChartCurrency\";\r\nimport s from './MainApp.module.css';\r\n\r\nconst MainApp = (props) => {\r\n    return (\r\n        <div className={s.app}>\r\n            <div className={s.currentlyCurrency}>\r\n                <CurrentlyCurrencyCourse/>\r\n            </div>\r\n            <div className={s.convertCurrency}>\r\n                <ConvertCurrency/>\r\n            </div>\r\n            <div className={s.chartCurrency}>\r\n                <ChartCurrency/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MainApp;\r\n","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {currencyCourseReducer} from './currencyCourseReducer';\r\n\r\nconst reducers = combineReducers({\r\n    currenciesCourses: currencyCourseReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));","import React from 'react';\nimport './App.css';\nimport MainApp from \"./components/MainApp/MainApp\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Provider store={store}>\n                <MainApp/>\n            </Provider>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blockConvertCurrency\":\"ConvertCurrency_blockConvertCurrency__VbE0a\",\"textConvert\":\"ConvertCurrency_textConvert__3BJUq\",\"currencyUp\":\"ConvertCurrency_currencyUp__1xC5F\",\"countUp\":\"ConvertCurrency_countUp__YK9dJ\",\"currencyDown\":\"ConvertCurrency_currencyDown__30qtN\",\"countDown\":\"ConvertCurrency_countDown__20IBu\",\"blockText\":\"ConvertCurrency_blockText__3HmMz\",\"blockCurrentlyCourseText\":\"ConvertCurrency_blockCurrentlyCourseText__32vu1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"CommonComponents_select__1owSI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"period\":\"Period_period__25Mpy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"period\":\"ChartCurrency_period__2BJhz\"};"],"sourceRoot":""}